if no return statement, the function will return the last line
everything is an object
puts = print, and returns nil

a = 'Hello'
b = 'World'
puts "#{a} #{b}"
	Hello World
	=> nil
c = a + " " + b
	Hello World
	=> nil
c[1..2]
	=> "el"
c[1,2]
	=> "el"
c[1...2]
	=> "e"
c.reverse
	=> "dlroW olleH"
c.upcase
	=> "HELLO WORLD"
c.downcase
	=> "hello world"
#Everything is true except nil and false
a = [1, 2, 3]
	=> [1, 2, 3]
a.first
	=> 1
a.last
	=> 3
h = {a: 1, b: 2}
	=> {:a=>1, :b=>2}
h[:a]
	=> 1
h[:a] = 3
	=> 3
h[:a]
	=> 3
class MyClass
	def initialize(a)
		@a = a
		#@ is instance variable call
	end
	def self.hi #self.*** makes it a static method
		puts 'hi'
	end
	def bye(a)
		puts @a + b
	end
end

MyClas.hi
	hi
	=> nil
n = MyClass.new(5)
	=> (some memory address)
m.bye(7)
	12
	=> nil
def foo(a, b)
	a + b
	end
foo 5, 6
	=> 11
a = [1, 2, 3, 54]
	=> [1, 2, 3, 54]
a.each do |i|
	puts i + 7
end
	8
	9
	10
	61
	=> [1, 2, 3, 54]
